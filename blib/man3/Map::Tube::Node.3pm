.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Map::Tube::Node 3pm"
.TH Map::Tube::Node 3pm 2024-08-25 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Map::Tube::Node \- Class to represent the station in the map.
.SH VERSION
.IX Header "VERSION"
Version 3.71
.SH DESCRIPTION
.IX Header "DESCRIPTION"
It provides simple interface to the \f(CW\*(C`node\*(C'\fR of the map.
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\&    use strict; use warnings;
\&    use Map::Tube::Node;
\&
\&    my $line = Map::Tube::Line\->new({ id => 1, name => \*(AqL1\*(Aq, color => \*(Aqred\*(Aq                  });
\&    my $node = Map::Tube::Node\->new({ id => 1, name => \*(AqN1\*(Aq, link  => \*(Aq2,3\*(Aq, line => [$line] });
\&
\&    print "Station:",       $node,        "\en";
\&    print "Station Id:",    $node\->id,    "\en";
\&    print "Station Name:",  $node\->name,  "\en";
\&    print "Station Link:",  $node\->link,  "\en";
\&    print "Station Line:",  $node\->line,  "\en";
\&    print "Station Links:", $node\->links, "\en";
.Ve
.SH CONSTRUCTOR
.IX Header "CONSTRUCTOR"
The following possible attributes for an object of type Map::Tube::Node.
.PP
.Vb 9
\&    +\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
\&    | Key   | Description                                                      |
\&    +\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
\&    | id    | Unique Node ID (required).                                       |
\&    | name  | Node name (required).                                            |
\&    | link  | Comma separated Node ID (required).                              |
\&    | links | Ref to a list of objects of type Map::Tube::Node (optional).     |
\&    | line  | Ref to a list of objects of type Map::Tube::Line (required).     |
\&    +\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
.Ve
.SH METHODS
.IX Header "METHODS"
.SS \fBid()\fP
.IX Subsection "id()"
Returns the station id.
.SS \fBname()\fP
.IX Subsection "name()"
Returns the station name.
.SS \fBlink()\fP
.IX Subsection "link()"
Returns comma separated linked station id.
.SS \fBlinks()\fP
.IX Subsection "links()"
Returns ref to a list of objects of type Map::Tube::Node.
.SS \fBline()\fP
.IX Subsection "line()"
Returns ref to a list of objects of type Map::Tube::Line.
.SH AUTHOR
.IX Header "AUTHOR"
Mohammad Sajid Anwar, \f(CW\*(C`<mohammad.anwar at yahoo.com>\*(C'\fR
.SH REPOSITORY
.IX Header "REPOSITORY"
<https://github.com/manwar/Map\-Tube>
.SH BUGS
.IX Header "BUGS"
Please report any bugs or feature requests through the web interface at <https://github.com/manwar/Map\-Tube/issues>.
I will  be notified and then you'll automatically be notified of progress on your
bug as I make changes.
.SH SUPPORT
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Map::Tube::Node
.Ve
.PP
You can also look for information at:
.IP \(bu 4
BUG Report
.Sp
<https://github.com/manwar/Map\-Tube/issues>
.IP \(bu 4
AnnoCPAN: Annotated CPAN documentation
.Sp
<http://annocpan.org/dist/Map\-Tube>
.IP \(bu 4
CPAN Ratings
.Sp
<http://cpanratings.perl.org/d/Map\-Tube>
.IP \(bu 4
Search MetaCPAN
.Sp
<https://metacpan.org/dist/Map\-Tube/>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (C) 2010 \- 2024 Mohammad Sajid Anwar.
.PP
This program is free software;you can  redistribute it and/or modify it under the
terms of the the Artistic License(2.0). You may obtain a copy of the full license
at:
.PP
<http://www.perlfoundation.org/artistic_license_2_0>
.PP
Any  use,  modification, and distribution of the Standard or Modified Versions is
governed by this Artistic License.By using, modifying or distributing the Package,
you accept this license. Do not use, modify, or distribute the Package, if you do
not accept this license.
.PP
If your Modified Version has been derived from a Modified Version made by someone
other than you,you are nevertheless required to ensure that your Modified Version
 complies with the requirements of this license.
.PP
This  license  does  not grant you the right to use any trademark,  service mark,
tradename, or logo of the Copyright Holder.
.PP
This license includes the non-exclusive, worldwide, free-of-charge patent license
to make,  have made, use,  offer to sell, sell, import and otherwise transfer the
Package with respect to any patent claims licensable by the Copyright Holder that
are  necessarily  infringed  by  the  Package. If you institute patent litigation
(including  a  cross-claim  or  counterclaim) against any party alleging that the
Package constitutes direct or contributory patent infringement,then this Artistic
License to you shall terminate on the date that such litigation is filed.
.PP
Disclaimer  of  Warranty:  THE  PACKAGE  IS  PROVIDED BY THE COPYRIGHT HOLDER AND
CONTRIBUTORS  "AS IS'  AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES. THE IMPLIED
WARRANTIES    OF   MERCHANTABILITY,   FITNESS   FOR   A   PARTICULAR  PURPOSE, OR
NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY YOUR LOCAL LAW. UNLESS
REQUIRED BY LAW, NO COPYRIGHT HOLDER OR CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE
OF THE PACKAGE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
